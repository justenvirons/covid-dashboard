adate <- ZCTA_map_dates[[daterow,"EndDate"]]
alayername = paste("cluster",as.character(layerrow),as.character(daterow),sep = "_")
ZCTA_map_latest <- ZCTA_map %>% filter(EndDate==adate, layer== alayer)
ZCTA_map_latest$value[ZCTA_map_latest$value == Inf] <- 0
ZCTA_map_latest$value[ZCTA_map_latest$value == -Inf] <- 0
ZCTA_map_latest_sf <- ZCTA_map_latest %>% st_as_sf() # simple feature
ZCTA_map_latest_sp <- as_Spatial(ZCTA_map_latest_sf) # spatial point dataset
ZCTA_map_latest_nb <- poly2nb(ZCTA_map_latest_sp) # neighbors, queen
ZCTA_map_latest_ww <- nb2listw(ZCTA_map_latest_nb, style='B') # spatial weights object
ZCTA_map_latest_mi <- moran(ZCTA_map_latest_sp$value, ZCTA_map_latest_ww, n=length(ZCTA_map_latest_ww$neighbours), S0=Szero(ZCTA_map_latest_ww)) # Moran's I
ZCTA_map_latest_lm <- localmoran(ZCTA_map_latest_sp$value, ZCTA_map_latest_ww) # LISA scores
ZCTA_map_latest_lm <- cbind(ZCTA_map_latest_sf, ZCTA_map_latest_lm)
ZCTA_map_latest_lm <- ZCTA_map_latest_lm[, !duplicated(colnames(ZCTA_map_latest_lm))]
ZCTA_map_latest_lm <- ZCTA_map_latest_lm %>% select(-contains(".1")) %>% rename(Pr.Z = Pr.z...0.)
ZCTA_map_latest_lm <- ZCTA_map_latest_lm %>% mutate(value_s = scale(value, scale=FALSE), Ii_s = scale(Ii, scale=FALSE), Gi_bin = ifelse(value_s >0 & Ii_s>0, 1, ifelse(value_s < 0 & Ii_s>0 ,2,ifelse(value_s < 0 & Ii_s<0 ,3,ifelse(value_s > 0 & Ii_s < 0 ,4,0))))) %>% mutate(Gi_bin = ifelse(Pr.Z > signif, 0, Gi_bin))
alayer <- assign(alayername,ZCTA_map_latest_lm) # assign custom name to layer- and date-specific dataframe
ZCTA_map_latest_lm_bind <- ZCTA_map_latest_lm_bind %>% rbind(alayer)
}
}
ZCTA_map_latest_lm_bind[is.na(ZCTA_map_latest_lm_bind)] <- 0
rm(list=ls(pattern="cluster_"))
rm(list=ls(pattern="sumProfile"))
rm(alayer,Chicago_COVID19_ByZCTA, Chicago_COVID19_ByZCTA_geom, ZCTA_map,ZCTA_map_dates,ZCTA_map_latest,ZCTA_map_latest_lm,ZCTA_map_latest_mi,ZCTA_map_latest_nb,ZCTA_map_latest_sf,ZCTA_map_latest_sp,ZCTA_map_latest_ww,ZCTA_map_layers,ZCTA_select)
# write data frames to layers folder
st_write(ZCTA_map_latest_lm_bind, "layers/Trends_map.shp", append=FALSE)
write.csv(ZCTA_profile,"layers/ZCTA_profile.csv")
write.csv(ZCTA_metrics,"layers/ZCTA_metrics.csv")
## ---------------------------
##
## Script name:
## Purpose of script:
## Author: C. Scott Smith, PhD AICP
## Date Last Updated: 2021-03-09
## Email: c.scott.smith@depaul.edu
## ---------------------------
##
## Notes:
##
##
## ---------------------------
library(csv)
library(dplyr)
library(tidyverse)
library(scales)
library(zoo)
library(gtools)
library(zip)
library(sf)
library(arcgisbinding)
setwd("C:/Users/scott/OneDrive - CCDPH/OneDrive - Cook County Health/git_repos/justenvirons/covid-dashboard")
# Download latest cases, deaths US data from WHO
# https://covid19.who.int/WHO-COVID-19-global-data.csv
# create nationwide table
covidCasesDataByCountry_WHO_raw <- read.csv(file = "https://covid19.who.int/WHO-COVID-19-global-data.csv")
# covidCasesDataByCountry_WHO_raw_rename <- covidCasesDataByCountry_WHO_raw %>% rename_at(1,~"Date") %>% rename(Deaths=New_deaths, Cases=New_cases, Deathscm=Cumulative_deaths, Casescm=Cumulative_cases, Geography=Country_code) %>% drop_na(Date)
covidCasesDataByCountry_WHO_raw_rename <- covidCasesDataByCountry_WHO_raw %>% rename_at(1,~"Date") %>% rename(Deaths=New_deaths, Cases=New_cases, Deathscm=Cumulative_deaths, Casescm=Cumulative_cases, Geography=Country_code)
covidCasesDataByCountry_WHO_raw_rename$Date <- as.Date(covidCasesDataByCountry_WHO_raw_rename$Date, "%Y-%m-%d") # reformat date text to date data type
covidCasesDataByCountry_WHO_US <- covidCasesDataByCountry_WHO_raw_rename %>% filter(Geography=="US") %>% arrange(Date) %>%  select(Date, Geography, Cases, Deaths, Casescm, Deathscm) %>% mutate(Cases7d = rollmean(x=Cases, k=7, fill=0, align="right"),Deaths7d = rollmean(x=Deaths, k=7, fill=0, align="right"))
covidCasesDataByCountry_WHO_US <- covidCasesDataByCountry_WHO_US %>% gather("layer","value",3:8)
# Download latest cases, deaths US data from Johns Hopkins University (JHU)
# https://coronavirus.jhu.edu/map.html
# create statewide tables
covidCasesDataByCounty_JH_raw <- read.csv(file = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
covidDeathsDataByCounty_JH_raw <- read.csv(file = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
# Reformat, subset JH case data; rename select columns;
anumcolumns <- ncol(covidCasesDataByCounty_JH_raw)-1
covidCasesDataByCounty_JH_long <- covidCasesDataByCounty_JH_raw %>% gather(Date, Cases, 12:anumcolumns) # reformat data from short to long form
covidCasesDataByCounty_JH_long$Date <- sub("X", "",covidCasesDataByCounty_JH_long$Date) # remove "X"s from date text column
covidCasesDataByCounty_JH_long$Date <- as.Date(covidCasesDataByCounty_JH_long$Date, "%m.%d.%y") # reformat date text to date data type
covidCasesDataByCounty_JH_long_IL <- covidCasesDataByCounty_JH_long %>% filter(Province_State=="Illinois", FIPS != 80017, FIPS != 90017) %>% select(Date, Geography=Province_State, Cases) %>% group_by(Date, Geography) %>% summarize(Casescm=sum(Cases)) %>% ungroup()
covidCasesDataByCounty_JH_long_IL <- covidCasesDataByCounty_JH_long_IL %>% arrange(Date) %>% mutate(Cases = Casescm - lag(Casescm, 1, order_by = Date), Cases=replace_na(Cases,0), Cases7d = rollmean(x=Cases, k=7, fill=0, align="right"))
covidCasesDataByCounty_JH_long_IL <- covidCasesDataByCounty_JH_long_IL %>% gather("layer","value",Casescm:Cases7d)
anumcolumns <- ncol(covidDeathsDataByCounty_JH_raw)-1
covidDeathsDataByCounty_JH_long <- covidDeathsDataByCounty_JH_raw %>% gather(Date, Deaths, 12:anumcolumns) # reformat data from short to long form
covidDeathsDataByCounty_JH_long$Date <- sub("X", "",covidDeathsDataByCounty_JH_long$Date) # remove "X"s from date text column
covidDeathsDataByCounty_JH_long$Date <- as.Date(covidDeathsDataByCounty_JH_long$Date, "%m.%d.%y") # reformat date text to date data type
covidDeathsDataByCounty_JH_long_IL <- covidDeathsDataByCounty_JH_long %>% filter(Province_State=="Illinois", FIPS != 80017, FIPS != 90017) %>% select(Date, Geography=Province_State, Deaths) %>% group_by(Date, Geography) %>% summarize(Deathscm=sum(Deaths)) %>% ungroup()
covidDeathsDataByCounty_JH_long_IL <- covidDeathsDataByCounty_JH_long_IL %>% arrange(Date) %>% mutate(Deaths = Deathscm - lag(Deathscm, 1, order_by = Date), Deaths=replace_na(Deaths,0), Deaths7d = rollmean(x=Deaths, k=7, fill=0, align="right"))
covidDeathsDataByCounty_JH_long_IL <- covidDeathsDataByCounty_JH_long_IL %>% gather("layer","value",Deathscm:Deaths7d)
# create Cook county tables
# Reformat, subset JH case data; rename select columns;
covidCasesDataByCounty_JH_long_Cook <- covidCasesDataByCounty_JH_long %>% filter(Province_State=="Illinois", Admin2=="Cook") %>% select(Date, State=Province_State, Geography=Admin2, Cases)
covidCasesDataByCounty_JH_long_Cook <- covidCasesDataByCounty_JH_long_Cook %>% filter(State=="Illinois" & Geography=="Cook") %>% select(Date, Geography, Cases) %>% group_by(Date, Geography) %>% summarize(Casescm=sum(Cases)) %>% ungroup()
covidCasesDataByCounty_JH_long_Cook <- covidCasesDataByCounty_JH_long_Cook %>% arrange(Date) %>% mutate(Cases = Casescm - lag(Casescm, 1, order_by = Date), Cases=replace_na(Cases,0), Cases7d = rollmean(x=Cases, k=7, fill=0, align="right"))
covidCasesDataByCounty_JH_long_Cook <- covidCasesDataByCounty_JH_long_Cook %>% gather("layer","value",Casescm:Cases7d)
covidDeathsDataByCounty_JH_long_Cook <- covidDeathsDataByCounty_JH_long %>% filter(Province_State=="Illinois", Admin2=="Cook") %>% select(Date, State=Province_State, Geography=Admin2, Deaths)
covidDeathsDataByCounty_JH_long_Cook <- covidDeathsDataByCounty_JH_long_Cook %>% filter(State=="Illinois" & Geography=="Cook") %>% select(Date, Geography, Deaths) %>% group_by(Date, Geography) %>% summarize(Deathscm=sum(Deaths)) %>% ungroup()
covidDeathsDataByCounty_JH_long_Cook <- covidDeathsDataByCounty_JH_long_Cook %>% arrange(Date) %>% mutate(Deaths = Deathscm - lag(Deathscm, 1, order_by = Date), Deaths=replace_na(Deaths,0), Deaths7d = rollmean(x=Deaths, k=7, fill=0, align="right"))
covidDeathsDataByCounty_JH_long_Cook <- covidDeathsDataByCounty_JH_long_Cook %>% gather("layer","value",Deathscm:Deaths7d)
# Download and import data from Chicago Data Portal
# create citywide table
Chicago_COVID19_CasesDeathsHospitalizations <- read_csv("https://data.cityofchicago.org/api/views/naz8-j4nc/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
Chicago_COVID19_CasesDeathsHospitalizations <- Chicago_COVID19_CasesDeathsHospitalizations %>% rename("Cases"="Cases - Total","Deaths"="Deaths - Total")
Chicago_COVID19_CasesDeathsHospitalizations$Date <- as.Date(Chicago_COVID19_CasesDeathsHospitalizations$Date, "%m/%d/%Y") # reformat date text to date data type
Chicago_COVID19_Summary <- Chicago_COVID19_CasesDeathsHospitalizations %>% drop_na(Cases)
Chicago_COVID19_Summary <- Chicago_COVID19_Summary %>% mutate_if(is.numeric,list(~replace_na(.,0))) %>% ungroup()
Chicago_COVID19_Summary <- Chicago_COVID19_Summary %>% arrange(Date) %>% select(Date, Cases, Deaths) %>% mutate(Cases7d = rollmean(x=Cases, k=7, fill=0, align="right"), Deaths7d = rollmean(x=Deaths, k=7, fill=0, align="right"), Casescm = cumsum(Cases), Deathscm = cumsum(Deaths), Geography="Chicago")
Chicago_COVID19_Summary <- Chicago_COVID19_Summary %>% gather("layer","value",Cases:Deathscm)
Welcome_metrics <- Welcome_metrics %>% mutate(Date = Date +1)
# rbind tables together
Welcome_metrics <- Chicago_COVID19_Summary %>% rbind(covidDeathsDataByCounty_JH_long_Cook,covidCasesDataByCounty_JH_long_Cook,covidDeathsDataByCounty_JH_long_IL,covidCasesDataByCounty_JH_long_IL,covidCasesDataByCountry_WHO_US) %>% drop_na(Date) %>% mutate(value=if_else(value<0,0,value)) %>% filter(Date>="2020-03-14")
Welcome_metrics_spread <- Welcome_metrics %>% spread(layer,value)
# add one day to date because of strange ArcGIS Online bug
write.csv(Welcome_metrics,"layers/GeoSummary_metrics.csv")
write.csv(Welcome_metrics_spread,"layers/GeoSummary_metrics_spread.csv")
ZCTA_select = st_read("layers/ZCTA_Select.shp")
Chicago_COVID19_ByZCTA <- read_csv("https://data.cityofchicago.org/api/views/yhhz-zm2v/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
Chicago_COVID19_ByZCTA <- Chicago_COVID19_ByZCTA %>% rename("ZCTA5"="ZIP Code", "WeekNo"="Week Number","StartDate"="Week Start","EndDate"="Week End","CasesWk"="Cases - Weekly","CasesCm"="Cases - Cumulative","CasesWkRt"="Case Rate - Weekly","CasesCmRt"="Case Rate - Cumulative","TestsWk"="Tests - Weekly","TestsCm"="Tests - Cumulative","TestsWkRt"="Test Rate - Weekly","TestsCmRt"="Test Rate - Cumulative","DeathsWk"="Deaths - Weekly","DeathsCm"="Deaths - Cumulative","DeathsWkRt"="Death Rate - Weekly","DeathsCmRt"="Death Rate - Cumulative", "PctPosWk"="Percent Tested Positive - Weekly", "PctPosCum"="Percent Tested Positive - Cumulative","TotPop"="Population","RowID"="Row ID","GEOM"="ZIP Code Location") %>% mutate(PctPosCum = CasesCm/TestsCm*100, PctPosWk = CasesWk/TestsWk*100)
Chicago_COVID19_ByZCTA$ZCTA5 <- as.character(Chicago_COVID19_ByZCTA$ZCTA5)
Chicago_COVID19_ByZCTA$GEOM <- NULL
Chicago_COVID19_ByZCTA$StartDate <- as.Date(Chicago_COVID19_ByZCTA$StartDate, "%m/%d/%Y")+1 # reformat date text to date data type
Chicago_COVID19_ByZCTA$EndDate <- as.Date(Chicago_COVID19_ByZCTA$EndDate, "%m/%d/%Y")+1 # reformat date text to date data type
# Chicago_COVID19_ByZCTA$WeekNo <- ifelse(format(Chicago_COVID19_ByZCTA$StartDate,"%Y")==2021,
#                                         Chicago_COVID19_ByZCTA$WeekNo+53,
#                                         Chicago_COVID19_ByZCTA$WeekNo)
Chicago_COVID19_ByZCTA_geom <- left_join(Chicago_COVID19_ByZCTA, ZCTA_select, by = c("ZCTA5"="ZCTA5"))
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom %>% filter(StartDate>=as.Date("3/15/2020","%m/%d/%Y"))
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom[, !duplicated(colnames(Chicago_COVID19_ByZCTA_geom))]
Chicago_COVID19_ByZCTA_geom$TotPop <- NULL
Chicago_COVID19_ByZCTA_geom_latest <- Chicago_COVID19_ByZCTA_geom %>% filter(EndDate==max(EndDate))
# data.frame(colnames(Chicago_COVID19_ByZCTA_geom))
fx_ntile <- function(x) quantcut(x,q=seq(0,1,by=0.2),labels=FALSE)
fx_pfxnt <- function(x) paste0('nt',x) # prefix "pct" added to column names with percent values
Chicago_COVID19_ByZCTA_geom_ntile <- Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5 != "Unknown" | ZCTA5 == "60666") %>% mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>% mutate_at(vars(5:14,16,18), fx_ntile) %>% rename_at(vars(5:18), fx_pfxnt)
Chicago_COVID19_ByZCTA_geom_ntile_gather <- Chicago_COVID19_ByZCTA_geom_ntile %>% gather("ntLayer","ntile",5:18) %>% select(ntLayer, ntile)
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5 != "Unknown" | ZCTA5 == "60666") %>% mutate(geometry=st_centroid(geometry)) %>% gather("Layer","Value",5:18) %>% mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>% cbind(Chicago_COVID19_ByZCTA_geom_ntile_gather) %>% select(-RowID,-TOTPOP)
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom %>%
mutate(WeekNo = epiweek(date),
WeekNo = if_else(epiyear(date)==2021,WeekNo+52,WeekNo)-1)
# Used for disparity maps (death and case counts all weeks)
st_write(Chicago_COVID19_ByZCTA_geom, "layers/Disparity_counts.shp", append=FALSE)
# zip("layers/Disparity_counts.zip",files=c("layers/Disparity_counts.shp","layers/Disparity_counts.dbf","layers/Disparity_counts.shx","layers/Disparity_counts.prj"))
shell.exec(file.path(paste0(getwd(), "/zipfiles.bat")))
# Used for welcome maps (latest death and case counts)
st_write(Chicago_COVID19_ByZCTA_geom_latest, "layers/ZCTA_map_latestdate.shp", append=FALSE)
rm(list=ls(pattern="_JH"))
rm(list=ls(pattern="_WHO"))
rm(list=ls(pattern="_Cases"))
rm(list=ls(pattern="_Summary"))
rm(list=ls(pattern="_ntile"))
rm(Chicago_COVID19_ByZCTA,ZCTA_select)
## ---------------------------
##
## Script name: ArcGISOnline_Vaccinations.R
# Purpose of script: import and process COVID-19 vaccine data from City of
# Chicago data portal for DePaul COVID-19 dashboard
## Author: C. Scott Smith, PhD AICP
## Date Created: 2021-01-15
## Date Last Updated: 2021-03-09
## Email: c.scott.smith@depaul.edu
## ---------------------------
##
## Notes:
##
##
## ---------------------------
# activate installed packages
library(dplyr) # https://cran.r-project.org/web/packages/dplyr/dplyr.pdf
library(tidyverse) # https://cran.r-project.org/web/packages/tidyverse/tidyverse.pdf
library(sf) # https://cran.r-project.org/web/packages/sf/sf.pdf
library(lubridate)
library(zoo)
# Download census geographies
ZCTA_select = st_read("layers/ZCTA_Select.shp")
# Download vacciations by zip code data for Chicago
Chicago_COVID19Vaccinations_ByZCTA <- read_csv(file="https://data.cityofchicago.org/api/views/553k-3xzc/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
Chicago_COVID19Vaccinations_ByZCTA <- Chicago_COVID19Vaccinations_ByZCTA %>% rename("zcta"="Zip Code", "date"="Date", "doses_daily"="Total Doses - Daily", "doses_cum"="Total Doses - Cumulative", "fdose_daily"="1st Dose - Daily", "fdose_cum"="1st Dose - Cumulative", "fdose_pctpop"="1st Dose - Percent Population", "com_daily"="Vaccine Series Completed - Daily", "com_cum"="Vaccine Series Completed - Cumulative", "com_pctpop"="Vaccine Series Completed  - Percent Population", "pop"="Population", "geometry"="ZIP Code Location")
Chicago_COVID19Vaccinations_ByZCTA$date <- as.Date(Chicago_COVID19Vaccinations_ByZCTA$date, "%m/%d/%Y") # reformat date text to date data type
Chicago_COVID19Vaccinations_ByZCTA <- Chicago_COVID19Vaccinations_ByZCTA %>%
mutate(WeekNo = epiweek(date),
WeekNo = if_else(epiyear(date)==2021,WeekNo+52,WeekNo)-1)
Chicago_COVID19Vaccinations_ByZCTA$date <- Chicago_COVID19Vaccinations_ByZCTA$date + 1 # add one day to date for ArcGIS online
Chicago_COVID19Vaccinations_ByZCTA$StartDate <- floor_date(Chicago_COVID19Vaccinations_ByZCTA$date,unit="week")+1
Chicago_COVID19Vaccinations_ByZCTA$EndDate <- ceiling_date(Chicago_COVID19Vaccinations_ByZCTA$date,unit="week")+1
# Create summaries for welcome page daily time series
Chicago_COVID19Vaccinations_ByZCTA_Sum <- Chicago_COVID19Vaccinations_ByZCTA %>% filter(pop>0) %>%group_by(date) %>% arrange(date) %>% summarise(doses = sum(doses_daily), dosescm = sum(doses_cum), fdoses = sum(fdose_daily),fdosescm = sum(fdose_cum), sdoses = sum(com_daily), sdosescm = sum(com_cum),pop=max(pop))
Chicago_COVID19Vaccinations_ByZCTA_Sum[is.na(Chicago_COVID19Vaccinations_ByZCTA_Sum)] <- 0
Chicago_COVID19Vaccinations_ByZCTA_Sum <- Chicago_COVID19Vaccinations_ByZCTA_Sum %>% mutate(doses7d = rollmean(x=doses, k=7, fill=0, align="right"), dosert = dosescm/pop*100, fdoses7d = rollmean(x=fdoses, k=7, fill=0, align="right"), fdosert = fdosescm/pop*100, sdoses7d = rollmean(x=sdoses, k=7, fill=0, align="right"), sdosert = sdosescm/pop*100)
# Create latest vaccinations shapefile for Welcome dashboard
Chicago_COVID19Vaccinations_ByZCTA <- Chicago_COVID19Vaccinations_ByZCTA %>% mutate(zcta_char = as.character(zcta))
Chicago_COVID19Vaccinations_ByZCTA_GEOM <- Chicago_COVID19Vaccinations_ByZCTA %>% select(-geometry) %>% left_join(ZCTA_select, by=c("zcta_char"="ZCTA5"))
# Chicago_COVID19Vaccinations_ByZCTA_GEOM_latest <- Chicago_COVID19Vaccinations_ByZCTA_GEOM %>% filter(date==max(date)) %>% drop_na(ZCTA5No) %>% mutate(geometry= st_centroid(geometry))
Chicago_COVID19Vaccinations_ByZCTA_GEOM_latest <- Chicago_COVID19Vaccinations_ByZCTA_GEOM %>% filter(date==max(date)) %>% drop_na(ZCTA5No)
# Export summary and latest vaccinations data to CSV and shapefile
st_write(Chicago_COVID19Vaccinations_ByZCTA_GEOM_latest,"layers/Chicago_COVID19Vaccinations_ByZCTA_GEOM_latest.shp", append=FALSE)
write.csv(Chicago_COVID19Vaccinations_ByZCTA_Sum,"layers/Vaccinations_Summary.csv")
adate <- as.character(Sys.Date())
Chicago_COVID19TestingLocations <- read_csv(file="https://data.cityofchicago.org/api/views/thdn-3grx/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
Chicago_COVID19VaccinationLocations <- read_csv(file="https://data.cityofchicago.org/api/views/6q3z-9maq/rows.csv?accessType=DOWNLOAD")
write.csv(Chicago_COVID19VaccinationLocations, paste0("archive/Chicago_COVID19VaccinationLocations_",adate,".csv"))
write.csv(Chicago_COVID19TestingLocations, paste0("archive/Chicago_COVID19TestingLocations_",adate,".csv"))
# Author: C. Scott Smith
# Updated: 11/23/2020
# Activate libraries
library(csv)
library(dplyr)
library(tidyverse)
library(sf)
library(readxl)
library(scales)
library(gtools)
library(classInt)
library(clipr)
library(purrr)
library(sp)
library(spdep)
library(rgdal)
library(rgeos)
library(spgwr)
library(grid)
library(gridExtra)
library(data.table)
library(lubridate)
# import clipped zip code geographic file
ZCTA_select = st_read("layers/ZCTA_Select.shp")
ZCTA_select <- st_transform(ZCTA_select, crs = 26916)
# Analyses for hardship dashboard
# download and import data from Chicago Data Portal
Chicago_COVID19_ByZCTA <- read_csv("https://data.cityofchicago.org/api/views/yhhz-zm2v/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
Chicago_COVID19_ByZCTA <- Chicago_COVID19_ByZCTA %>% rename("ZCTA5"="ZIP Code", "WeekNo"="Week Number","StartDate"="Week Start","EndDate"="Week End","CasesWk"="Cases - Weekly","CasesCm"="Cases - Cumulative","CasesWkRt"="Case Rate - Weekly","CasesCmRt"="Case Rate - Cumulative","TestsWk"="Tests - Weekly","TestsCm"="Tests - Cumulative","TestsWkRt"="Test Rate - Weekly","TestsCmRt"="Test Rate - Cumulative","DeathsWk"="Deaths - Weekly","DeathsCm"="Deaths - Cumulative","DeathsWkRt"="Death Rate - Weekly","DeathsCmRt"="Death Rate - Cumulative", "PctPosWk"="Percent Tested Positive - Weekly", "PctPosCum"="Percent Tested Positive - Cumulative","TotPop"="Population","RowID"="Row ID","GEOM"="ZIP Code Location")
Chicago_COVID19_ByZCTA$ZCTA5 <- as.character(Chicago_COVID19_ByZCTA$ZCTA5)
Chicago_COVID19_ByZCTA$GEOM <- NULL
Chicago_COVID19_ByZCTA$StartDate <- as.Date(Chicago_COVID19_ByZCTA$StartDate, "%m/%d/%Y")+1 # reformat date text to date data type
Chicago_COVID19_ByZCTA$EndDate <- as.Date(Chicago_COVID19_ByZCTA$EndDate, "%m/%d/%Y")+1 # reformat date text to date data type
Chicago_COVID19_ByZCTA <- Chicago_COVID19_ByZCTA %>%
mutate(WeekNo = epiweek(EndDate),
WeekNo = if_else(epiyear(EndDate)==2021,WeekNo+52,WeekNo)-1)
Chicago_COVID19_ByZCTA_geom <- left_join(Chicago_COVID19_ByZCTA, ZCTA_select, by = c("ZCTA5"="ZCTA5"))
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom %>% filter(StartDate>=as.Date("3/14/2020","%m/%d/%Y"))
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom[, !duplicated(colnames(Chicago_COVID19_ByZCTA_geom))]
Chicago_COVID19_ByZCTA_geom$TotPop <- NULL
# Replace NAs with 0s to allow for subsequent calculations
Chicago_COVID19_ByZCTA_geom[c("CasesWk","CasesCm","CasesWkRt","CasesCmRt","TestsWk","TestsCm","TestsWkRt","TestsCmRt")][is.na(Chicago_COVID19_ByZCTA_geom[c("CasesWk","CasesCm","CasesWkRt","CasesCmRt","TestsWk","TestsCm","TestsWkRt","TestsCmRt")])] <- 0
# Add/transform columns to create additional variables
Chicago_COVID19_ByZCTA_geom$SurvCm <- Chicago_COVID19_ByZCTA_geom$TOTPOP-Chicago_COVID19_ByZCTA_geom$DeathsCm
Chicago_COVID19_ByZCTA_geom$NotTestedCm <- Chicago_COVID19_ByZCTA_geom$TOTPOP-Chicago_COVID19_ByZCTA_geom$TestsCm
Chicago_COVID19_ByZCTA_geom$NotInfCm <- Chicago_COVID19_ByZCTA_geom$TOTPOP-Chicago_COVID19_ByZCTA_geom$CasesCm
Chicago_COVID19_ByZCTA_geom$PctPosCum <- Chicago_COVID19_ByZCTA_geom$CasesCm/Chicago_COVID19_ByZCTA_geom$TestsCm*100
Chicago_COVID19_ByZCTA_geom$PctPosWk <- Chicago_COVID19_ByZCTA_geom$CasesWk/Chicago_COVID19_ByZCTA_geom$TestsWk*100
Chicago_COVID19_ByZCTA_geom[c("SurvCm","NotTestedCm","NotInfCm","PctPosCum","PctPosWk")][is.na(Chicago_COVID19_ByZCTA_geom[c("SurvCm","NotTestedCm","NotInfCm","PctPosCum","PctPosWk")])] <- 0
# Create hardship index
# Create lag variables
Chicago_COVID19_ByZCTA_geom  <- Chicago_COVID19_ByZCTA_geom %>% group_by(ZCTA5) %>% arrange(EndDate) %>% mutate(CasesWkRtLag1wk = lag(CasesWkRt, 1, order_by=EndDate), DeathsWkRtLag1wk = lag(DeathsWkRt, 1, order_by=EndDate),PctPosWkLag1wk = lag(PctPosWk, 1, order_by=EndDate))
Chicago_COVID19_ByZCTA_geom[c("CasesWkRtLag1wk","DeathsWkRtLag1wk","PctPosWkLag1wk")][is.na(Chicago_COVID19_ByZCTA_geom[c("CasesWkRtLag1wk","DeathsWkRtLag1wk","PctPosWkLag1wk")])] <- 0
# Rescale indicator variables
attach(Chicago_COVID19_ByZCTA_geom)
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom %>% group_by(WeekNo) %>% mutate(PctPosWk_adj = rescale(PctPosWk, to=c(0,100)), CasesWkRt_adj = rescale(CasesWkRt, to=c(0,100)),DeathsWkRt_adj = rescale(DeathsWkRt, to=c(0,100)), PctPosWk_trd = rescale((PctPosWk-PctPosWkLag1wk), to=c(0,100)), CasesWkRt_trd = rescale((CasesWkRt-CasesWkRtLag1wk), to=c(0,100)), DeathsWkRt_trd = rescale((DeathsWkRt-DeathsWkRtLag1wk), to=c(0,100)))
detach(Chicago_COVID19_ByZCTA_geom)
# Weight and combine indicator variables
attach(Chicago_COVID19_ByZCTA_geom)
Chicago_COVID19_ByZCTA_geom$Hardship = rescale(PctPosWk_adj*0.25 + CasesWkRt_adj*0.25 + DeathsWkRt_adj*0.25 + rescale(PctPosWk_trd*0.33+CasesWkRt_trd*0.33+DeathsWkRt_trd*0.33, to=c(0,100))*0.25,to=c(0,100))
Chicago_COVID19_ByZCTA_geom[c("Hardship")][is.na(Chicago_COVID19_ByZCTA_geom[c("Hardship")])] <- 0
Chicago_COVID19_ByZCTA_geom$Hardship[Chicago_COVID19_ByZCTA_geom$Hardship == Inf] <- 0
Chicago_COVID19_ByZCTA_geom$Hardship[Chicago_COVID19_ByZCTA_geom$Hardship == -Inf] <- 0
detach(Chicago_COVID19_ByZCTA_geom)
# Create quintiles
# quintiles over entire study period
attach(Chicago_COVID19_ByZCTA_geom)
Chicago_COVID19_ByZCTA_geom$CasesWkRt_qa <- quantcut(CasesWkRt,q=seq(0,1,by=0.20),labels=FALSE)
Chicago_COVID19_ByZCTA_geom$PctPosWk_qa <- quantcut(PctPosWk,q=seq(0,1,by=0.20),labels=FALSE)
Chicago_COVID19_ByZCTA_geom$Hardship_qa <- quantcut(Hardship,q=seq(0,1,by=0.20),labels=FALSE)
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom %>% mutate(color=case_when(Hardship_qa == 1 ~ "#0070ff",Hardship_qa == 2 ~ "#bed2ff",Hardship_qa == 3 ~ "#ffebaf",Hardship_qa == 4 ~ "#ffaa00",Hardship_qa == 5 ~ "#ff0000"))
detach(Chicago_COVID19_ByZCTA_geom)
# abreaks <- classIntervals(DeathsWkRt, n=5, style="jenks")
Chicago_COVID19_ByZCTA_geom <- Chicago_COVID19_ByZCTA_geom %>% mutate(DeathsWkRt_qa=case_when(DeathsWkRt <= 0 ~ 1, DeathsWkRt > 0 & DeathsWkRt <= 2.6 ~ 2, DeathsWkRt > 2.6 & DeathsWkRt <= 8 ~ 3, DeathsWkRt > 8 & DeathsWkRt <= 15.8 ~ 4, DeathsWkRt > 15.8 ~ 5))
# Select variables for ZCTA_profile CSV
sumProfileZCTA <- Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5!="Unknown" & ZCTA5!="60666") %>% select(EndDate, ZCTA5, CasesCm, DeathsCm, TestsCm) %>% group_by(ZCTA5) %>% summarise(CasCm = max(CasesCm), DthCm = max(DeathsCm), TstCm = max(TestsCm), PosRt = format(round(CasCm/TstCm*100, 1))) %>% arrange(ZCTA5)
sumProfilePkCasZCTA <-  Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5!="Unknown" & ZCTA5!="60666") %>% select(EndDate, ZCTA5, CasesWk, CasesWkRt) %>% group_by(ZCTA5) %>% slice(which.max(CasesWk)) %>% mutate(EndDate = as.character(format(EndDate, "%D"))) %>% rename(PkCasWk = WeekNo, PkCasDat = EndDate, PkCas=CasesWk, PkCasRt = CasesWkRt) %>% arrange(ZCTA5)
sumProfilePkDthZCTA <-  Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5!="Unknown" & ZCTA5!="60666") %>% select(EndDate, ZCTA5, DeathsWk, DeathsWkRt) %>% group_by(ZCTA5) %>% slice(which.max(DeathsWk)) %>% mutate(EndDate = as.character(format(EndDate, "%D"))) %>% rename(PkDthWk = WeekNo, PkDthDat = EndDate, PkDth=DeathsWk, PkDthRt = DeathsWkRt) %>% arrange(ZCTA5)
sumProfilePkPosZCTA <-  Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5!="Unknown" & ZCTA5!="60666") %>% select(EndDate, ZCTA5, PctPosWk) %>% group_by(ZCTA5) %>% slice(which.max(PctPosWk)) %>% mutate(EndDate = as.character(format(EndDate, "%D"))) %>% rename(PkPosWk = WeekNo, PkPosDat = EndDate, PkPosRt=PctPosWk) %>% arrange(ZCTA5)
sumProfileRegZCTA <- Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5!="Unknown" & ZCTA5!="60666") %>% select(EndDate, ZCTA5, REGION) %>% group_by(ZCTA5, REGION) %>% summarize(EndDate = max(EndDate), EndDateCh = as.character(format(max(EndDate),format="%B %d, %Y"))) %>% ungroup()
ZCTA_select <- ZCTA_select %>% arrange(ZCTA5No)
ZCTA_profile <- cbind(ZCTA_select, sumProfileZCTA,sumProfilePkCasZCTA,sumProfilePkDthZCTA,sumProfilePkPosZCTA,sumProfileRegZCTA)
ZCTA_profile <- ZCTA_profile %>% select(-contains(".")) %>% st_drop_geometry()
ZCTA_profile <- ZCTA_profile %>% mutate(CasRt_c = CasCm/TOTPOP*100000, DthRt_c = DthCm/TOTPOP*100000,PosRt_c = CasCm/TstCm*100, CasRtRnk = row_number(-CasCm/TOTPOP),DthRtRnk = row_number(-DthCm/TOTPOP),PosRtRnk = row_number(-CasCm/TstCm))
# Select variables for ZCTA_metrics CSV
ZCTA_metrics <- Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5!="Unknown" & ZCTA5!="60666") %>% select(-geometry) %>% mutate(CasesWk_c = sum(CasesWk),DeathsWk_c = sum(DeathsWk),CasesWkRt_c = CasesWk_c/sum(TOTPOP)*100000,DeathsWkRt_c = DeathsWkRt/sum(TOTPOP)*100000, PctPosWk_c = sum(CasesWk)/sum(TestsWk)*100,CasesRtDiff = CasesWkRt-CasesWkRt_c, DeathsRtDiff = DeathsWkRt - DeathsWkRt_c, PctPosDiff = PctPosWk - PctPosWk_c) %>% ungroup()
ZCTA_select$ZCTA5No <- as.integer(ZCTA_select$ZCTA5)
# Select and rename variables for ZCTA_map layer
ZCTA_map <- Chicago_COVID19_ByZCTA_geom %>% filter(ZCTA5!="Unknown" & ZCTA5!="60666") %>% select(ZCTA5, REGION, WeekNo, "SrtDate" = StartDate, EndDate, "PosWkqa" = PctPosWk_qa, "CasWkRtqa" = CasesWkRt_qa, "Hdshpqa" = Hardship_qa, "DthWkRqa" = DeathsWkRt_qa, "PosWk" = PctPosWk, "CasWkRt" = CasesWkRt, "DthWkRt" = DeathsWkRt, "Hdshp" = Hardship, "geom" = geometry)
ZCTA_map$ZCTA5 <- as.character(ZCTA_map$ZCTA5)
ZCTA_map$ZCTA5No <- as.integer(ZCTA_map$ZCTA5)
ZCTA_map <- ZCTA_map %>% gather("layer", "ntile", 6:9)
ZCTA_map <- ZCTA_map %>% mutate(label=case_when(ntile == 1 ~ "Lowest",ntile == 2 ~ "Low",ntile == 3 ~ "Moderate",ntile == 4 ~ "High",ntile == 5 ~ "Highest"))
ZCTA_map <- ZCTA_map %>% mutate(color=case_when(ntile == 1 ~ "#0070ff",ntile == 2 ~ "#bed2ff",ntile == 3 ~ "#ffebaf",ntile == 4 ~ "#ffaa00",ntile == 5 ~ "#ff0000"))
ZCTA_map <- ZCTA_map %>% mutate(layer_d=case_when(layer == "PosWkqa" ~ "Positivity Rate", layer == "Hdshpqa" ~ "Hardship Index (0-100)", layer == "CasWkRtqa" ~ "Infection Rate (per 100K)", layer == "DthWkRqa" ~ "Death Rate (per 100K)"))
ZCTA_map <- ZCTA_map %>% mutate(value=case_when(layer == "PosWkqa"  ~ PosWk, layer == "CasWkRtqa" ~ CasWkRt, layer =="DthWkRqa" ~ DthWkRt, layer=="Hdshpqa" ~ Hdshp)) %>% select(-PosWk,-CasWkRt,-DthWkRt,-Hdshp)
ZCTA_map <- ZCTA_map %>% ungroup()
ZCTA_map %>% group_by(layer_d, ntile, label, color) %>% summarise(n(), min(value), max(value))
ZCTA_map %>% group_by(layer_d, ntile, label, color) %>% summarise(n(), min(value), max(value))
# Run LISA clustering for all variables and weeks
ZCTA_map_layers <- ZCTA_map %>% group_by(layer) %>% summarise(n()) %>% select(layer)
ZCTA_map_dates <- ZCTA_map %>% group_by(EndDate) %>% summarise(n()) %>% select(EndDate)
# develop data frame template for subsequent analyses
for(layerrow in 1:1){
for (daterow in 1:1) {
alayer <- ZCTA_map_layers[[layerrow,"layer"]]
adate <- ZCTA_map_dates[[daterow,"EndDate"]]
alayername = paste("cluster",as.character(layerrow),as.character(daterow),sep = "_")
ZCTA_map_latest <- ZCTA_map %>% filter(EndDate==adate, layer== alayer)
ZCTA_map_latest$value[ZCTA_map_latest$value == Inf] <- 0
ZCTA_map_latest$value[ZCTA_map_latest$value == -Inf] <- 0
ZCTA_map_latest_sf <- ZCTA_map_latest %>% st_as_sf() # simple feature
ZCTA_map_latest_sp <- as_Spatial(ZCTA_map_latest_sf) # spatial point dataset
ZCTA_map_latest_nb <- poly2nb(ZCTA_map_latest_sp) # neighbors, queen
ZCTA_map_latest_ww <- nb2listw(ZCTA_map_latest_nb, style='B') # spatial weights object
ZCTA_map_latest_mi <- moran(ZCTA_map_latest_sp$value, ZCTA_map_latest_ww, n=length(ZCTA_map_latest_ww$neighbours), S0=Szero(ZCTA_map_latest_ww)) # Moran's I
ZCTA_map_latest_lm <- localmoran(ZCTA_map_latest_sp$value, ZCTA_map_latest_ww) # LISA scores
ZCTA_map_latest_lm <- cbind(ZCTA_map_latest_sf, ZCTA_map_latest_lm)
ZCTA_map_latest_lm <- ZCTA_map_latest_lm[, !duplicated(colnames(ZCTA_map_latest_lm))]
ZCTA_map_latest_lm <- ZCTA_map_latest_lm %>% select(-contains(".1")) %>% rename(Pr.Z = Pr.z...0.)
ZCTA_map_latest_lm <- ZCTA_map_latest_lm %>% mutate(value_s = scale(value, scale=FALSE), Ii_s = scale(Ii, scale=FALSE), Gi_bin = ifelse(value_s >0 & Ii_s>0, 1, ifelse(value_s < 0 & Ii_s>0 ,2,ifelse(value_s < 0 & Ii_s<0 ,3,ifelse(value_s > 0 & Ii_s < 0 ,4,0)))))
}
}
# ZCTA_map_latest_lm_bind %>% group_by(layer) %>% summarize(n())
# ZCTA_map %>% group_by(layer) %>% summarize(n())
signif <- 0.1 # significance threshold for LISA values
ZCTA_map_latest_lm_bind <- ZCTA_map_latest_lm[0,]
for(layerrow in 1:nrow(ZCTA_map_layers)){
for (daterow in 1:nrow(ZCTA_map_dates)) {
alayer <- ZCTA_map_layers[[layerrow,"layer"]]
adate <- ZCTA_map_dates[[daterow,"EndDate"]]
alayername = paste("cluster",as.character(layerrow),as.character(daterow),sep = "_")
ZCTA_map_latest <- ZCTA_map %>% filter(EndDate==adate, layer== alayer)
ZCTA_map_latest$value[ZCTA_map_latest$value == Inf] <- 0
ZCTA_map_latest$value[ZCTA_map_latest$value == -Inf] <- 0
ZCTA_map_latest_sf <- ZCTA_map_latest %>% st_as_sf() # simple feature
ZCTA_map_latest_sp <- as_Spatial(ZCTA_map_latest_sf) # spatial point dataset
ZCTA_map_latest_nb <- poly2nb(ZCTA_map_latest_sp) # neighbors, queen
ZCTA_map_latest_ww <- nb2listw(ZCTA_map_latest_nb, style='B') # spatial weights object
ZCTA_map_latest_mi <- moran(ZCTA_map_latest_sp$value, ZCTA_map_latest_ww, n=length(ZCTA_map_latest_ww$neighbours), S0=Szero(ZCTA_map_latest_ww)) # Moran's I
ZCTA_map_latest_lm <- localmoran(ZCTA_map_latest_sp$value, ZCTA_map_latest_ww) # LISA scores
ZCTA_map_latest_lm <- cbind(ZCTA_map_latest_sf, ZCTA_map_latest_lm)
ZCTA_map_latest_lm <- ZCTA_map_latest_lm[, !duplicated(colnames(ZCTA_map_latest_lm))]
ZCTA_map_latest_lm <- ZCTA_map_latest_lm %>% select(-contains(".1")) %>% rename(Pr.Z = Pr.z...0.)
ZCTA_map_latest_lm <- ZCTA_map_latest_lm %>% mutate(value_s = scale(value, scale=FALSE), Ii_s = scale(Ii, scale=FALSE), Gi_bin = ifelse(value_s >0 & Ii_s>0, 1, ifelse(value_s < 0 & Ii_s>0 ,2,ifelse(value_s < 0 & Ii_s<0 ,3,ifelse(value_s > 0 & Ii_s < 0 ,4,0))))) %>% mutate(Gi_bin = ifelse(Pr.Z > signif, 0, Gi_bin))
alayer <- assign(alayername,ZCTA_map_latest_lm) # assign custom name to layer- and date-specific dataframe
ZCTA_map_latest_lm_bind <- ZCTA_map_latest_lm_bind %>% rbind(alayer)
}
}
ZCTA_map_latest_lm_bind[is.na(ZCTA_map_latest_lm_bind)] <- 0
rm(list=ls(pattern="cluster_"))
rm(list=ls(pattern="sumProfile"))
rm(alayer,Chicago_COVID19_ByZCTA, Chicago_COVID19_ByZCTA_geom, ZCTA_map,ZCTA_map_dates,ZCTA_map_latest,ZCTA_map_latest_lm,ZCTA_map_latest_mi,ZCTA_map_latest_nb,ZCTA_map_latest_sf,ZCTA_map_latest_sp,ZCTA_map_latest_ww,ZCTA_map_layers,ZCTA_select)
# write data frames to layers folder
st_write(ZCTA_map_latest_lm_bind, "layers/Trends_map.shp", append=FALSE)
write.csv(ZCTA_profile,"layers/ZCTA_profile.csv")
write.csv(ZCTA_metrics,"layers/ZCTA_metrics.csv")
# Author: C. Scott Smith
# Updated 11/17/2020
# Download and process COVID-19 test, cases and deaths data by ZCTA in Chicago
# activate packages
library(csv)
library(dplyr)
library(tidyverse)
library(sf)
library(ggplot2)
library(clipr)
library(readxl)
library(scales)
library(zoo)
library(lubridate)
# Functions used for processing, transforming data tables (used below)
fx_asnum <- function(x) as.numeric(gsub(",","",x)) # convert to number
fx_pctpop <- function(x) (x/(table$Total)*100) # percent of total population
fx_pctcas <- function(x) (x/(table$Cases)*100) # percent of total cases
fx_pctdth <- function(x) (x/(table$Deaths)*100) # percent of total deaths
fx_pcthos <- function(x) (x/(table$Hosp)*100) # percent of total hospitalizations
fx_cumsum <- function(x) cumsum(x) # cumulative sum using Date field
fx_rollmn <- function(x) rollmean(x, k=7, fill=0, align="right") # rolling 7-day average calculation using date column
fx_lagwk <- function(x) lag(x, k=7, fill=0, align="right") # 7-day lag value using date column
fx_rollsm <- function(x) rollsum(x, k=7, fill=0, align="right") # rolling 7-day sum using date column
fx_pfxpct <- function(x) paste0('pct',x) # prefix "pct" added to column names with percent values
fx_pfxtot <- function(x) paste0('tot',x) # prefix "tot" added to column names with total values
# Import, rename and process citywide demographic data from Chicago Data Portal
# data.frame(colnames(DemoChars_Chicago)) # use to identify column names
DemoChars_Chicago <- read.csv("https://data.cityofchicago.org/api/views/85cm-7uqa/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
DemoChars_Chicago <- DemoChars_Chicago %>% select(-1, -Record.ID) %>%
filter(Geography=="Chicago",
Year==2019) %>%
rename("Total"="Population...Total",
"Age0_17"="Population...Age.0.17",
"Age18_29"="Population...Age.18.29",
"Age30_39"="Population...Age.30.39",
"Age40_49"="Population...Age.40.49",
"Age50_59"="Population...Age.50.59",
"Age60_69"="Population...Age.60.69",
"Age70_79"="Population...Age.70.79",
"Age80Pl"="Population...Age.80.",
"Female"="Population...Female",
"Male"="Population...Male",
"Latinx"="Population...Latinx",
"AsianNL"="Population...Asian.Non.Latinx",
"BlackNL"="Population...Black.Non.Latinx",
"WhiteNL"="Population...White.Non.Latinx",
"OthRaceNL"="Population...Other.Race.Non.Latinx") %>%
select(-contains("Population"))
table <- DemoChars_Chicago
table <- table %>% mutate_at(vars(3:18), fx_asnum)
DemoChars_Chicago_pct <- table %>% mutate_at(vars(4:18), fx_pctpop)
rm(table)
# Import, rename and process daily COVID-19 cases, deaths, hospitalizations data from Chicago Data Portal
# data.frame(colnames(Chicago_COVID19_CasesDeathsHospitalizations)) # use to identify column names
Chicago_COVID19_CasesDeathsHospitalizations <- read_csv("https://data.cityofchicago.org/api/views/naz8-j4nc/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
Chicago_COVID19_CasesDeathsHospitalizations <- Chicago_COVID19_CasesDeathsHospitalizations %>%
rename("Cases"="Cases - Total",
"Deaths"="Deaths - Total",
"Hosp"="Hospitalizations - Total",
"Cases_Age0_17"="Cases - Age 0-17",
"Cases_Age18_29"="Cases - Age 18-29",
"Cases_Age30_39"="Cases - Age 30-39",
"Cases_Age40_49"="Cases - Age 40-49",
"Cases_Age50_59"="Cases - Age 50-59",
"Cases_Age60_69"="Cases - Age 60-69",
"Cases_Age70_79"="Cases - Age 70-79",
"Cases_Age80Pl"="Cases -  Age 80+",
"Cases_UnkAge"="Cases - Age Unknown",
"Cases_Female"="Cases - Female",
"Cases_Male"="Cases - Male",
"Cases_UnkGend"="Cases - Unknown Gender",
"Cases_Latinx"="Cases - Latinx",
"Cases_AsianNL"="Cases - Asian Non-Latinx",
"Cases_BlackNL"="Cases - Black Non-Latinx",
"Cases_WhiteNL"="Cases - White Non-Latinx",
"Cases_OthRaceNL"="Cases - Other Race Non-Latinx",
"Cases_UnkRace"="Cases - Unknown Race/Ethnicity",
"Deaths_Age0_17"="Deaths - Age 0-17",
"Deaths_Age18_29"="Deaths - Age 18-29",
"Deaths_Age30_39"="Deaths - Age 30-39",
"Deaths_Age40_49"="Deaths - Age 40-49",
"Deaths_Age50_59"="Deaths - Age 50-59",
"Deaths_Age60_69"="Deaths - Age 60-69",
"Deaths_Age70_79"="Deaths - Age 70-79",
"Deaths_Age80Pl"="Deaths - Age 80+",
"Deaths_UnkAge"="Deaths - Age Unknown",
"Deaths_Female"="Deaths - Female",
"Deaths_Male"="Deaths - Male",
"Deaths_UnkGend"="Deaths - Unknown Gender",
"Deaths_Latinx"="Deaths - Latinx",
"Deaths_AsianNL"="Deaths - Asian Non-Latinx",
"Deaths_BlackNL"="Deaths - Black Non-Latinx",
"Deaths_WhiteNL"="Deaths - White Non-Latinx",
"Deaths_OthRaceNL"="Deaths - Other Race Non-Latinx",
"Deaths_UnkRace"="Deaths - Unknown Race/Ethnicity",
"Hosp_Age0_17"="Hospitalizations - Age 0-17",
"Hosp_Age18_29"="Hospitalizations - Age 18-29",
"Hosp_Age30_39"="Hospitalizations - Age 30-39",
"Hosp_Age40_49"="Hospitalizations - Age 40-49",
"Hosp_Age50_59"="Hospitalizations - Age 50-59",
"Hosp_Age60_69"="Hospitalizations - Age 60-69",
"Hosp_Age70_79"="Hospitalizations - Age 70-79",
"Hosp_Age80Pl"="Hospitalizations - Age 80+",
"Hosp_UnkAge"="Hospitalizations - Age Unknown",
"Hosp_Female"="Hospitalizations - Female",
"Hosp_Male"="Hospitalizations - Male",
"Hosp_UnkGend"="Hospitalizations - Unknown Gender",
"Hosp_Latinx"="Hospitalizations - Latinx",
"Hosp_AsianNL"="Hospitalizations - Asian Non-Latinx",
"Hosp_BlackNL"="Hospitalizations - Black Non-Latinx",
"Hosp_WhiteNL"="Hospitalizations - White Non-Latinx",
"Hosp_OthRaceNL"="Hospitalizations - Other Race Non-Latinx",
"Hosp_UnkRace"="Hospitalizations - Unknown Race/Ethnicity")
Chicago_COVID19_CasesDeathsHospitalizations$Date <- as.Date(Chicago_COVID19_CasesDeathsHospitalizations$Date, "%m/%d/%Y") # reformat date text to date data type
Chicago_COVID19_CasesDeathsHospitalizations$Geography <- "Chicago"
table <- Chicago_COVID19_CasesDeathsHospitalizations
table <- table %>% arrange(Date) %>% mutate_at(vars(2:58), fx_cumsum)
Chicago_COVID19_CasesDeathsHospitalizations_pct <- table %>%
arrange(Date) %>%
mutate_at(vars(5:22), fx_pctcas) %>%
mutate_at(vars(23:40), fx_pctdth) %>%
mutate_at(vars(41:58), fx_pcthos) %>%
mutate_if(is.numeric,list(~replace_na(.,0))) %>%
ungroup()
rm(table) # remove temporary table
# Reformat variables, add layer and label fields for time series data that power serial charts, selector tools used in disparity dashboard
temp1 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 5:13) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Cases", Label="Age")
temp2 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 14:16) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Cases", Label="Gender")
temp3 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 17:22) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Cases", Label="Race")
temp4 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 23:31) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Deaths", Label="Age")
temp5 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 32:34) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Deaths", Label="Gender")
temp6 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 35:40) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Deaths", Label="Race")
temp7 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 41:49) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Hospitalizations", Label="Age")
temp8 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 50:52) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Hospitalizations", Label="Gender")
temp9 <- Chicago_COVID19_CasesDeathsHospitalizations_pct %>% gather("Category", "Rate_Cat", 53:58) %>% select(Date,Category,Rate_Cat) %>% mutate(Layer="Hospitalizations", Label="Race")
# bind rows remove suffixes from category column
Chicago_COVID19_CasesDeathsHospitalizations_pct_long <- rbind(temp1,temp2,temp3,temp4,temp5,temp6,temp7,temp8,temp9) %>% mutate(Category = str_replace(Category, "Cases_", "")) %>% mutate(Category = str_replace(Category, "Deaths_", "")) %>% mutate(Category = str_replace(Category, "Hosp_", ""))
# Chicago_COVID19_CasesDeathsHospitalizations_pct_long <- Chicago_COVID19_CasesDeathsHospitalizations_pct_long %>% mutate(WeekNo = as.numeric(format(Date,"%W"))+1, EndDate = ceiling_date(Date,unit="week")) %>% mutate(WeekNo = ifelse(format(Date,"%Y")==2021,WeekNo+53,WeekNo))
Chicago_COVID19_CasesDeathsHospitalizations_pct_long <- Chicago_COVID19_CasesDeathsHospitalizations_pct_long %>%
mutate(WeekNo = epiweek(Date),
EndDate = ceiling_date(Date,unit="week")-1,
WeekNo = if_else(epiyear(Date)==2021,WeekNo+52,WeekNo)-1)
rm(list=ls(pattern="temp")) # remove all temporary tables
# Transform demographic data table, convert from short to long-form
DemoChars_Chicago_pct_long <- DemoChars_Chicago_pct %>%
gather("Category", "Rate_Ref", 4:18) %>%
select(Category,Rate_Ref)
# Reorder label values so that they appear in order within dashboard serial charts
DemoChars_Chicago_pct_long <- DemoChars_Chicago_pct_long %>%
mutate(Order=row_number())
# Combine demographics to COVID-19 time series data
Chicago_COVID19_CasesDeathsHospitalizations_pct_long <- Chicago_COVID19_CasesDeathsHospitalizations_pct_long %>%
drop_na(Date) %>%
replace(is.na(.), 0) #remove NAs in Date column, replace NAs with 0s in all other
Chicago_COVID19_CasesDeathsHospitalizations_pct_long <- Chicago_COVID19_CasesDeathsHospitalizations_pct_long %>%
left_join(DemoChars_Chicago_pct_long, by="Category")
Chicago_COVID19_CasesDeathsHospitalizations_pct_long_wk <- Chicago_COVID19_CasesDeathsHospitalizations_pct_long %>%
arrange(Date, Order) %>%
drop_na(Date) %>%
replace(is.na(.), 0) %>%
filter(Date==EndDate)
# Table to be imported into ArcGIS online
write.csv(Chicago_COVID19_CasesDeathsHospitalizations_pct_long_wk,"layers/Disparity_timeseries_metrics.csv")
